[{"/Users/adaazev/Desktop/clubs.community/src/index.js":"1","/Users/adaazev/Desktop/clubs.community/src/App.js":"2","/Users/adaazev/Desktop/clubs.community/src/tests/reportWebVitals.js":"3","/Users/adaazev/Desktop/clubs.community/src/Club.js":"4"},{"size":605,"mtime":1670283671889,"results":"5","hashOfConfig":"6"},{"size":8473,"mtime":1670547883838,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1670283671889,"results":"8","hashOfConfig":"6"},{"size":430,"mtime":1670283671889,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kvlo95",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/adaazev/Desktop/clubs.community/src/index.js",[],[],"/Users/adaazev/Desktop/clubs.community/src/App.js",["23","24","25","26","27","28","29","30","31"],[],"import './main.css'\nimport axios from \"axios\";\nimport React from \"react\";\nimport {Club} from './Club.js';\nimport { render } from '@testing-library/react';\n\n/**\n * Entrypoint component for App \n */\n\n\nfunction App() {\n\n  // Component State\n  const [clubs, setClubs] = React.useState([])\n  const [filteredClubs, setFilteredClubs] = React.useState([])\n  // popup club description\n  const [selectedClubDesc, setSelectedClubDesc] = React.useState(undefined)\n  // popup club email\n  const [selectedClubMail, setSelectedClubMail] = React.useState(undefined)\n  // popup club advisor\n  const [selectedClubAdv, setSelectedClubAdv] = React.useState(undefined)\n  // popup club leader(s)\n  const [selectedClubLead, setSelectedClubLead] = React.useState(undefined)\n  // popup club email\n  const [selectedClubName, setSelectedClubName] = React.useState(undefined)\n  // popup club advisor\n  const [selectedClubTags, setSelectedClubTags] = React.useState(undefined)\n  // modal boolean state\n  const [showModal, setShowModal] = React.useState(false)\n  \n  // const the_button = document.querySelector(\".js-btn\")\n  // const modal = document.querySelector(\".modal\")\n  // Hook for disabling club div onclick\n  const [disable, setDisable] = React.useState(false);\n\n  const dialog = document.querySelector(\"dialog\");\n  // const club = document.querySelector(\".clubs\");\n\n  // const closeSpan = document.querySelector(\".close\")\n\n  /**\n   * Get list of Clubs from API\n   * NEW FUNCTION: MADE WITH OPENAI\n   */\n   React.useEffect(() => {\n    axios.get(\"https://us-central1-clubs-community-be504.cloudfunctions.net/app\")\n      .then((response) => {\n        const results = response.data.values;\n        results.splice(0, 1);\n        let newResults = results.map((result) => {\n          let leads = result[4].split(\", \");\n          let teachers = result[3].split(\", \");\n          let emails = result[5].split(\", \");\n          return new Club(result[2], leads, teachers, emails, result[6], result[7]);\n        });\n        setClubs(newResults);\n        setFilteredClubs(newResults);\n      });\n  }, []);\n\n  /**\n   * Callback to handle typing (onChange) of the\n   * search inpout field\n   * Optomized function. \n   */\n     const handleSearch = (event) => {\n      const search = event.target.value.toLowerCase();\n      if (search) {\n        setFilteredClubs(clubs.filter((club) =>\n          club.name.toLowerCase().includes(search)\n          || club.teachers.join(', ').includes(search)\n          || club.leads.join(', ').includes(search)));\n      } else {\n        setFilteredClubs(clubs);\n      }\n    }\n\n  if (window.innerWidth < 600) {\n    return (\n      <div id=\"mobile\">\n        <img src=\"wrench.svg\" height={50} alt=\"wrench\" />\n        <h1>Sorry, this app is not supported on mobile devices.</h1>\n      </div>\n    );\n  }\n\n  // {/* For category button */}\n  const handleClick = (event) => {\n    const search = event.target.value\n    if (search) {\n      setFilteredClubs(clubs.filter((club) => \n      club.categories.toLowerCase().includes(search.toLowerCase())))\n    } else {\n      setFilteredClubs(clubs)\n    }\n  }\n\n  // Activates Modal popup\n  const createModal = (i) => {\n    setSelectedClubDesc(i.description);\n    setSelectedClubMail(i.emails.join(', '));\n    setSelectedClubAdv(i.teachers.join(', '));\n    setSelectedClubLead(i.leads.join(', '));\n    setSelectedClubName(i.name);\n    setSelectedClubTags(i.categories);\n    setDisable(true);\n    setShowModal(true);\n  }\n  \n  return (\n    <div className=\"\">\n      {/* Renders search bar and clubs */}\n      <div className='Main'>\n        {/* Header */}\n        <div className=\"grid-body\">\n          <div className=\"grid-container\">\n            <div className=\"box1\">\n              <img id=\"logo\" src=\"nueva.png\"/>\n              <span>The Nueva School</span>\n            </div>\n            <div className=\"box2\">\n              <img id=\"club\" src=\"club1.jpg\"/>\n            </div>\n            <div className=\"box2\">\n              <img id=\"club\" src=\"club2.jpg\"/>\n            </div>\n            <div className=\"box4\"></div>\n          </div>\n      </div>\n        {/* Search bar */}\n          <input onChange={handleSearch} type=\"text\" placeholder=\"Search for clubs and people...\" />\n          {/* Clubs */}\n          <div className=\"container\">\n            {filteredClubs.length === 0 ? (\n              <div className=\"loading\">\n                <p>Loading clubs...</p>\n              </div>\n            ) : (\n            filteredClubs.map((club, index) => (\n              // creating div for each club\n              <div key={index} className=\"clubs\" onClick={() => createModal(club)}>\n              {/* rendering club objects */}\n              <h2 className=\"card-header\">{club.name}</h2>\n              <p className=\"card-leads\">{club.leads.join(', ')}</p>\n              <p className=\"card-body\">{club.description}</p>\n            </div>\n          )))}\n        </div>\n      </div>\n      {/* rendering popup */}\n      { showModal && (\n        <React.Fragment>\n          <div className='modal-backdrop' onClick={() => setShowModal(false)}></div>\n          <div className=\"modal\">\n            <h2 className=\"card-expand-header\">{selectedClubName}</h2>\n            <p className=\"card-expand-leads\">Lead(s): {selectedClubLead} ({selectedClubMail})</p>\n            <p className=\"card-expand-leads\">Faculty Advisor(s): {selectedClubAdv}</p>\n            <p className=\"card-expand\">Description: {selectedClubDesc}</p>\n            <p className=\"card-expand\">Categories: {selectedClubTags}</p>\n            \n            <span className=\"close\" onClick={() => setShowModal(false)}>&times;</span>\n          </div>\n        </React.Fragment>\n      )}\n      {/* Prints category buttons to sort clubs by category */}\n      <div className=\"Categories-bucket\">\n        {/* Category element header */}\n        <h1 id=\"title\">Categories:</h1>\n        {/* Buttons; when clicked they activate the constant handleClick with a given value, and the program sorts the clubs by that value*/}\n        <button className=\"Categories\" onClick={handleClick} value={\"\"}>\n          All Categories\n        </button>\n        <button className=\"Categories\" onClick={handleClick} value={\"Academic\"}>\n          Academic\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Activism\"}>\n          Activism\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Affinity Group\"}>\n          Affinity Groups\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Community Service\"}>\n          Community Service\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Hobbies & Interests\"}>\n          Hobbies & Interests\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Language & Culture\"}>\n          Language & Culture\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Sports & Fitness\"}>\n          Sports & Fitness\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"STEM\"}>\n          STEM\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Visual & Performing Arts\"}>\n          Visual & Performing Arts\n        </button>\n        <button className=\"Categories\"  onClick={handleClick} value={\"Writing & Literature\"}>\n          Writing & Literature\n        </button>\n      </div>\n      <div className='Categories-bucket'>\n        {/* Resource element header */}\n        <h1 id=\"title\">More Resources:</h1>\n\n        {/* Each button is wrapped by an a tag which means when the button is clicked it will activate the link */}\n        <a className='Categories' className =\"card-leads\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSc1Z3Uc_SYBZWU1-O1tLEPGQ9AI2EZjcHp60Vs5eL9l75X3uw/viewform\">\n          <button className='Categories'>Clubs Funding Application</button>\n        </a>\n        <a className='Categories' className =\"card-leads\" href=\"https://docs.google.com/document/d/1UPBjlHAmMsutsL9CanyyLAroq7_CjUQGBO-5YGY2tTI/edit\">\n          <button className='Categories'>Clubs Guidelines</button>\n        </a>\n        <a className='Categories' className =\"card-leads\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSfkJI5qw_puxyJ6X2gZ7XsXda33-UFLzSG4VpsdvQfus4WU_g/viewform\">\n          <button className='Categories'>Clubs Creation Application</button>\n        </a>  \n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/adaazev/Desktop/clubs.community/src/tests/reportWebVitals.js",[],[],"/Users/adaazev/Desktop/clubs.community/src/Club.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":16},{"ruleId":"32","severity":1,"message":"36","line":35,"column":10,"nodeType":"34","messageId":"35","endLine":35,"endColumn":17},{"ruleId":"32","severity":1,"message":"37","line":37,"column":9,"nodeType":"34","messageId":"35","endLine":37,"endColumn":15},{"ruleId":"38","severity":1,"message":"39","line":119,"column":15,"nodeType":"40","endLine":119,"endColumn":47},{"ruleId":"38","severity":1,"message":"39","line":123,"column":15,"nodeType":"40","endLine":123,"endColumn":47},{"ruleId":"38","severity":1,"message":"39","line":126,"column":15,"nodeType":"40","endLine":126,"endColumn":47},{"ruleId":"41","severity":1,"message":"42","line":210,"column":35,"nodeType":"43","messageId":"44","endLine":210,"endColumn":58},{"ruleId":"41","severity":1,"message":"42","line":213,"column":35,"nodeType":"43","messageId":"44","endLine":213,"endColumn":58},{"ruleId":"41","severity":1,"message":"42","line":216,"column":35,"nodeType":"43","messageId":"44","endLine":216,"endColumn":58},"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'disable' is assigned a value but never used.","'dialog' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps"]